# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gapfill_model.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='gapfill_model.proto',
  package='kbase_core',
  syntax='proto3',
  serialized_pb=_b('\n\x13gapfill_model.proto\x12\nkbase_core\">\n\x04Term\x12\x13\n\x0b\x63oefficient\x18\x01 \x01(\x01\x12\x0f\n\x07varType\x18\x02 \x01(\t\x12\x10\n\x08variable\x18\x03 \x01(\t\"D\n\x05\x42ound\x12\x0b\n\x03min\x18\x01 \x01(\x01\x12\x0b\n\x03max\x18\x02 \x01(\x01\x12\x0f\n\x07varType\x18\x03 \x01(\t\x12\x10\n\x08variable\x18\x04 \x01(\t\"V\n\nConstraint\x12\x0b\n\x03rhs\x18\x01 \x01(\x01\x12\x0c\n\x04sign\x18\x02 \x01(\t\x12\x1f\n\x05terms\x18\x03 \x03(\x0b\x32\x10.kbase_core.Term\x12\x0c\n\x04name\x18\x04 \x01(\t\"\xbc\r\n\x12GapfillModelParams\x12\x10\n\x08model_id\x18\x01 \x01(\t\x12\x1a\n\x12model_workspace_id\x18\x02 \x01(\t\x12?\n\x0b\x66ormulation\x18\x03 \x01(\x0b\x32*.kbase_core.GapfillModelParams.Formulation\x12\x18\n\x10phenotype_set_id\x18\x04 \x01(\t\x12\"\n\x1aphenotype_set_workspace_id\x18\x05 \x01(\t\x12\x1a\n\x12integrate_solution\x18\x06 \x01(\x08\x12\x18\n\x10target_reactions\x18\x07 \x03(\t\x12\x14\n\x0cout_model_id\x18\x08 \x01(\t\x12\x14\n\x0cworkspace_id\x18\t \x01(\t\x12\x12\n\ngapfill_id\x18\n \x01(\t\x12\x17\n\x0ftimePerSolution\x18\x0b \x01(\r\x12\x16\n\x0etotalTimeLimit\x18\x0c \x01(\r\x12\x0c\n\x04\x61uth\x18\r \x01(\t\x12\x11\n\toverwrite\x18\x0e \x01(\x08\x12\x17\n\x0f\x63ompleteGapfill\x18\x0f \x01(\x08\x1a\x97\n\n\x0b\x46ormulation\x12\x46\n\x03\x66\x62\x61\x18\x01 \x01(\x0b\x32\x39.kbase_core.GapfillModelParams.Formulation.FBAFormulation\x12\x15\n\rnum_solutions\x18\x02 \x01(\x05\x12\x12\n\nnomediahyp\x18\x03 \x01(\x08\x12\x14\n\x0cnobiomasshyp\x18\x04 \x01(\x08\x12\x10\n\x08nogprhyp\x18\x05 \x01(\x08\x12\x14\n\x0cnopathwayhyp\x18\x06 \x01(\x08\x12\x17\n\x0f\x61llowunbalanced\x18\x07 \x01(\x08\x12\x15\n\ractivitybonus\x18\x08 \x01(\x01\x12\x10\n\x08\x64rainpen\x18\t \x01(\x01\x12\x14\n\x0c\x64irectionpen\x18\n \x01(\x01\x12\x13\n\x0bnostructpen\x18\x0b \x01(\x01\x12\x16\n\x0eunfavorablepen\x18\x0c \x01(\x01\x12\x13\n\x0bnodeltagpen\x18\r \x01(\x01\x12\x17\n\x0f\x62iomasstranspen\x18\x0e \x01(\x01\x12\x16\n\x0esingletranspen\x18\x0f \x01(\x01\x12\x10\n\x08transpen\x18\x10 \x01(\x01\x12\x17\n\x0f\x62lacklistedrxns\x18\x11 \x03(\t\x12\x16\n\x0egauranteedrxns\x18\x12 \x03(\t\x12\x13\n\x0b\x61llowedcmps\x18\x13 \x03(\t\x12\x13\n\x0bprobanno_id\x18\x14 \x01(\t\x12\x1d\n\x15probanno_workspace_id\x18\x15 \x01(\t\x1a\xff\x05\n\x0e\x46\x42\x41\x46ormulation\x12\x10\n\x08media_id\x18\x01 \x01(\t\x12\x18\n\x10\x61\x64\x64n_compound_id\x18\x02 \x03(\t\x12\x19\n\x11promconstraint_id\x18\x03 \x01(\t\x12#\n\x1bpromconstraint_workspace_id\x18\x04 \x01(\t\x12\x17\n\x0f\x65\x66lux_sample_id\x18\x05 \x01(\t\x12\x17\n\x0f\x65\x66lux_series_id\x18\x06 \x01(\t\x12\x1a\n\x12\x65\x66lux_workspace_id\x18\x07 \x01(\t\x12\x17\n\x0fmedia_workspace\x18\x08 \x01(\t\x12\x13\n\x0bobjfraction\x18\t \x01(\x01\x12\x15\n\rallreversible\x18\n \x01(\x08\x12\x1a\n\x12maximize_objective\x18\x0b \x01(\x08\x12)\n\x0fobjective_terms\x18\x0c \x03(\x0b\x32\x10.kbase_core.Term\x12\x0e\n\x06geneko\x18\r \x03(\t\x12\r\n\x05rxnko\x18\x0e \x03(\t\x12!\n\x06\x62ounds\x18\x0f \x03(\x0b\x32\x11.kbase_core.Bound\x12+\n\x0b\x63onstraints\x18\x10 \x03(\x0b\x32\x16.kbase_core.Constraint\x12[\n\tuptakelim\x18\x11 \x03(\x0b\x32H.kbase_core.GapfillModelParams.Formulation.FBAFormulation.UptakelimEntry\x12\x16\n\x0e\x64\x65\x66\x61ultmaxflux\x18\x12 \x01(\x01\x12\x18\n\x10\x64\x65\x66\x61ultminuptake\x18\x13 \x01(\x01\x12\x18\n\x10\x64\x65\x66\x61ultmaxuptake\x18\x14 \x01(\x01\x12\x19\n\x11simplethermoconst\x18\x15 \x01(\x08\x12\x13\n\x0bthermoconst\x18\x16 \x01(\x08\x12\x15\n\rnothermoerror\x18\x17 \x01(\x08\x12\x16\n\x0eminthermoerror\x18\x18 \x01(\x08\x1a\x30\n\x0eUptakelimEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x01:\x02\x38\x01\"\xbe\x02\n\rModelMetadata\x12\x11\n\tobject_id\x18\x01 \x01(\t\x12\x13\n\x0bobject_type\x18\x02 \x01(\t\x12\x0f\n\x07moddate\x18\x03 \x01(\t\x12\x10\n\x08instance\x18\x04 \x01(\r\x12\x0f\n\x07\x63ommand\x18\x05 \x01(\t\x12\x1a\n\x12last_modifier_user\x18\x06 \x01(\t\x12\r\n\x05owner\x18\x07 \x01(\t\x12\x14\n\x0cworkspace_id\x18\x08 \x01(\t\x12\x15\n\rworkspace_ref\x18\t \x01(\t\x12\r\n\x05\x63hsum\x18\n \x01(\t\x12\x39\n\x08metadata\x18\x0b \x03(\x0b\x32\'.kbase_core.ModelMetadata.MetadataEntry\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x32Y\n\tfba_model\x12L\n\rgapfill_model\x12\x1e.kbase_core.GapfillModelParams\x1a\x19.kbase_core.ModelMetadata\"\x00\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_TERM = _descriptor.Descriptor(
  name='Term',
  full_name='kbase_core.Term',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='coefficient', full_name='kbase_core.Term.coefficient', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='varType', full_name='kbase_core.Term.varType', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='variable', full_name='kbase_core.Term.variable', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=35,
  serialized_end=97,
)


_BOUND = _descriptor.Descriptor(
  name='Bound',
  full_name='kbase_core.Bound',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='min', full_name='kbase_core.Bound.min', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max', full_name='kbase_core.Bound.max', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='varType', full_name='kbase_core.Bound.varType', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='variable', full_name='kbase_core.Bound.variable', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=99,
  serialized_end=167,
)


_CONSTRAINT = _descriptor.Descriptor(
  name='Constraint',
  full_name='kbase_core.Constraint',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rhs', full_name='kbase_core.Constraint.rhs', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sign', full_name='kbase_core.Constraint.sign', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='terms', full_name='kbase_core.Constraint.terms', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='kbase_core.Constraint.name', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=169,
  serialized_end=255,
)


_GAPFILLMODELPARAMS_FORMULATION_FBAFORMULATION_UPTAKELIMENTRY = _descriptor.Descriptor(
  name='UptakelimEntry',
  full_name='kbase_core.GapfillModelParams.Formulation.FBAFormulation.UptakelimEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='kbase_core.GapfillModelParams.Formulation.FBAFormulation.UptakelimEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='kbase_core.GapfillModelParams.Formulation.FBAFormulation.UptakelimEntry.value', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1934,
  serialized_end=1982,
)

_GAPFILLMODELPARAMS_FORMULATION_FBAFORMULATION = _descriptor.Descriptor(
  name='FBAFormulation',
  full_name='kbase_core.GapfillModelParams.Formulation.FBAFormulation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='media_id', full_name='kbase_core.GapfillModelParams.Formulation.FBAFormulation.media_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='addn_compound_id', full_name='kbase_core.GapfillModelParams.Formulation.FBAFormulation.addn_compound_id', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='promconstraint_id', full_name='kbase_core.GapfillModelParams.Formulation.FBAFormulation.promconstraint_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='promconstraint_workspace_id', full_name='kbase_core.GapfillModelParams.Formulation.FBAFormulation.promconstraint_workspace_id', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='eflux_sample_id', full_name='kbase_core.GapfillModelParams.Formulation.FBAFormulation.eflux_sample_id', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='eflux_series_id', full_name='kbase_core.GapfillModelParams.Formulation.FBAFormulation.eflux_series_id', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='eflux_workspace_id', full_name='kbase_core.GapfillModelParams.Formulation.FBAFormulation.eflux_workspace_id', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='media_workspace', full_name='kbase_core.GapfillModelParams.Formulation.FBAFormulation.media_workspace', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='objfraction', full_name='kbase_core.GapfillModelParams.Formulation.FBAFormulation.objfraction', index=8,
      number=9, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='allreversible', full_name='kbase_core.GapfillModelParams.Formulation.FBAFormulation.allreversible', index=9,
      number=10, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='maximize_objective', full_name='kbase_core.GapfillModelParams.Formulation.FBAFormulation.maximize_objective', index=10,
      number=11, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='objective_terms', full_name='kbase_core.GapfillModelParams.Formulation.FBAFormulation.objective_terms', index=11,
      number=12, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='geneko', full_name='kbase_core.GapfillModelParams.Formulation.FBAFormulation.geneko', index=12,
      number=13, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rxnko', full_name='kbase_core.GapfillModelParams.Formulation.FBAFormulation.rxnko', index=13,
      number=14, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bounds', full_name='kbase_core.GapfillModelParams.Formulation.FBAFormulation.bounds', index=14,
      number=15, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='constraints', full_name='kbase_core.GapfillModelParams.Formulation.FBAFormulation.constraints', index=15,
      number=16, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='uptakelim', full_name='kbase_core.GapfillModelParams.Formulation.FBAFormulation.uptakelim', index=16,
      number=17, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='defaultmaxflux', full_name='kbase_core.GapfillModelParams.Formulation.FBAFormulation.defaultmaxflux', index=17,
      number=18, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='defaultminuptake', full_name='kbase_core.GapfillModelParams.Formulation.FBAFormulation.defaultminuptake', index=18,
      number=19, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='defaultmaxuptake', full_name='kbase_core.GapfillModelParams.Formulation.FBAFormulation.defaultmaxuptake', index=19,
      number=20, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='simplethermoconst', full_name='kbase_core.GapfillModelParams.Formulation.FBAFormulation.simplethermoconst', index=20,
      number=21, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='thermoconst', full_name='kbase_core.GapfillModelParams.Formulation.FBAFormulation.thermoconst', index=21,
      number=22, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nothermoerror', full_name='kbase_core.GapfillModelParams.Formulation.FBAFormulation.nothermoerror', index=22,
      number=23, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='minthermoerror', full_name='kbase_core.GapfillModelParams.Formulation.FBAFormulation.minthermoerror', index=23,
      number=24, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_GAPFILLMODELPARAMS_FORMULATION_FBAFORMULATION_UPTAKELIMENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1215,
  serialized_end=1982,
)

_GAPFILLMODELPARAMS_FORMULATION = _descriptor.Descriptor(
  name='Formulation',
  full_name='kbase_core.GapfillModelParams.Formulation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='fba', full_name='kbase_core.GapfillModelParams.Formulation.fba', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_solutions', full_name='kbase_core.GapfillModelParams.Formulation.num_solutions', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nomediahyp', full_name='kbase_core.GapfillModelParams.Formulation.nomediahyp', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nobiomasshyp', full_name='kbase_core.GapfillModelParams.Formulation.nobiomasshyp', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nogprhyp', full_name='kbase_core.GapfillModelParams.Formulation.nogprhyp', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nopathwayhyp', full_name='kbase_core.GapfillModelParams.Formulation.nopathwayhyp', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='allowunbalanced', full_name='kbase_core.GapfillModelParams.Formulation.allowunbalanced', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='activitybonus', full_name='kbase_core.GapfillModelParams.Formulation.activitybonus', index=7,
      number=8, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='drainpen', full_name='kbase_core.GapfillModelParams.Formulation.drainpen', index=8,
      number=9, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='directionpen', full_name='kbase_core.GapfillModelParams.Formulation.directionpen', index=9,
      number=10, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nostructpen', full_name='kbase_core.GapfillModelParams.Formulation.nostructpen', index=10,
      number=11, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='unfavorablepen', full_name='kbase_core.GapfillModelParams.Formulation.unfavorablepen', index=11,
      number=12, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nodeltagpen', full_name='kbase_core.GapfillModelParams.Formulation.nodeltagpen', index=12,
      number=13, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='biomasstranspen', full_name='kbase_core.GapfillModelParams.Formulation.biomasstranspen', index=13,
      number=14, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='singletranspen', full_name='kbase_core.GapfillModelParams.Formulation.singletranspen', index=14,
      number=15, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='transpen', full_name='kbase_core.GapfillModelParams.Formulation.transpen', index=15,
      number=16, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='blacklistedrxns', full_name='kbase_core.GapfillModelParams.Formulation.blacklistedrxns', index=16,
      number=17, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='gauranteedrxns', full_name='kbase_core.GapfillModelParams.Formulation.gauranteedrxns', index=17,
      number=18, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='allowedcmps', full_name='kbase_core.GapfillModelParams.Formulation.allowedcmps', index=18,
      number=19, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='probanno_id', full_name='kbase_core.GapfillModelParams.Formulation.probanno_id', index=19,
      number=20, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='probanno_workspace_id', full_name='kbase_core.GapfillModelParams.Formulation.probanno_workspace_id', index=20,
      number=21, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_GAPFILLMODELPARAMS_FORMULATION_FBAFORMULATION, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=679,
  serialized_end=1982,
)

_GAPFILLMODELPARAMS = _descriptor.Descriptor(
  name='GapfillModelParams',
  full_name='kbase_core.GapfillModelParams',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='model_id', full_name='kbase_core.GapfillModelParams.model_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='model_workspace_id', full_name='kbase_core.GapfillModelParams.model_workspace_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='formulation', full_name='kbase_core.GapfillModelParams.formulation', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='phenotype_set_id', full_name='kbase_core.GapfillModelParams.phenotype_set_id', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='phenotype_set_workspace_id', full_name='kbase_core.GapfillModelParams.phenotype_set_workspace_id', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='integrate_solution', full_name='kbase_core.GapfillModelParams.integrate_solution', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='target_reactions', full_name='kbase_core.GapfillModelParams.target_reactions', index=6,
      number=7, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='out_model_id', full_name='kbase_core.GapfillModelParams.out_model_id', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='workspace_id', full_name='kbase_core.GapfillModelParams.workspace_id', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='gapfill_id', full_name='kbase_core.GapfillModelParams.gapfill_id', index=9,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timePerSolution', full_name='kbase_core.GapfillModelParams.timePerSolution', index=10,
      number=11, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='totalTimeLimit', full_name='kbase_core.GapfillModelParams.totalTimeLimit', index=11,
      number=12, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='auth', full_name='kbase_core.GapfillModelParams.auth', index=12,
      number=13, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='overwrite', full_name='kbase_core.GapfillModelParams.overwrite', index=13,
      number=14, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='completeGapfill', full_name='kbase_core.GapfillModelParams.completeGapfill', index=14,
      number=15, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_GAPFILLMODELPARAMS_FORMULATION, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=258,
  serialized_end=1982,
)


_MODELMETADATA_METADATAENTRY = _descriptor.Descriptor(
  name='MetadataEntry',
  full_name='kbase_core.ModelMetadata.MetadataEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='kbase_core.ModelMetadata.MetadataEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='kbase_core.ModelMetadata.MetadataEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2256,
  serialized_end=2303,
)

_MODELMETADATA = _descriptor.Descriptor(
  name='ModelMetadata',
  full_name='kbase_core.ModelMetadata',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='object_id', full_name='kbase_core.ModelMetadata.object_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='object_type', full_name='kbase_core.ModelMetadata.object_type', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='moddate', full_name='kbase_core.ModelMetadata.moddate', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='instance', full_name='kbase_core.ModelMetadata.instance', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='command', full_name='kbase_core.ModelMetadata.command', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='last_modifier_user', full_name='kbase_core.ModelMetadata.last_modifier_user', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='owner', full_name='kbase_core.ModelMetadata.owner', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='workspace_id', full_name='kbase_core.ModelMetadata.workspace_id', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='workspace_ref', full_name='kbase_core.ModelMetadata.workspace_ref', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='chsum', full_name='kbase_core.ModelMetadata.chsum', index=9,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='metadata', full_name='kbase_core.ModelMetadata.metadata', index=10,
      number=11, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_MODELMETADATA_METADATAENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1985,
  serialized_end=2303,
)

_CONSTRAINT.fields_by_name['terms'].message_type = _TERM
_GAPFILLMODELPARAMS_FORMULATION_FBAFORMULATION_UPTAKELIMENTRY.containing_type = _GAPFILLMODELPARAMS_FORMULATION_FBAFORMULATION
_GAPFILLMODELPARAMS_FORMULATION_FBAFORMULATION.fields_by_name['objective_terms'].message_type = _TERM
_GAPFILLMODELPARAMS_FORMULATION_FBAFORMULATION.fields_by_name['bounds'].message_type = _BOUND
_GAPFILLMODELPARAMS_FORMULATION_FBAFORMULATION.fields_by_name['constraints'].message_type = _CONSTRAINT
_GAPFILLMODELPARAMS_FORMULATION_FBAFORMULATION.fields_by_name['uptakelim'].message_type = _GAPFILLMODELPARAMS_FORMULATION_FBAFORMULATION_UPTAKELIMENTRY
_GAPFILLMODELPARAMS_FORMULATION_FBAFORMULATION.containing_type = _GAPFILLMODELPARAMS_FORMULATION
_GAPFILLMODELPARAMS_FORMULATION.fields_by_name['fba'].message_type = _GAPFILLMODELPARAMS_FORMULATION_FBAFORMULATION
_GAPFILLMODELPARAMS_FORMULATION.containing_type = _GAPFILLMODELPARAMS
_GAPFILLMODELPARAMS.fields_by_name['formulation'].message_type = _GAPFILLMODELPARAMS_FORMULATION
_MODELMETADATA_METADATAENTRY.containing_type = _MODELMETADATA
_MODELMETADATA.fields_by_name['metadata'].message_type = _MODELMETADATA_METADATAENTRY
DESCRIPTOR.message_types_by_name['Term'] = _TERM
DESCRIPTOR.message_types_by_name['Bound'] = _BOUND
DESCRIPTOR.message_types_by_name['Constraint'] = _CONSTRAINT
DESCRIPTOR.message_types_by_name['GapfillModelParams'] = _GAPFILLMODELPARAMS
DESCRIPTOR.message_types_by_name['ModelMetadata'] = _MODELMETADATA

Term = _reflection.GeneratedProtocolMessageType('Term', (_message.Message,), dict(
  DESCRIPTOR = _TERM,
  __module__ = 'gapfill_model_pb2'
  # @@protoc_insertion_point(class_scope:kbase_core.Term)
  ))
_sym_db.RegisterMessage(Term)

Bound = _reflection.GeneratedProtocolMessageType('Bound', (_message.Message,), dict(
  DESCRIPTOR = _BOUND,
  __module__ = 'gapfill_model_pb2'
  # @@protoc_insertion_point(class_scope:kbase_core.Bound)
  ))
_sym_db.RegisterMessage(Bound)

Constraint = _reflection.GeneratedProtocolMessageType('Constraint', (_message.Message,), dict(
  DESCRIPTOR = _CONSTRAINT,
  __module__ = 'gapfill_model_pb2'
  # @@protoc_insertion_point(class_scope:kbase_core.Constraint)
  ))
_sym_db.RegisterMessage(Constraint)

GapfillModelParams = _reflection.GeneratedProtocolMessageType('GapfillModelParams', (_message.Message,), dict(

  Formulation = _reflection.GeneratedProtocolMessageType('Formulation', (_message.Message,), dict(

    FBAFormulation = _reflection.GeneratedProtocolMessageType('FBAFormulation', (_message.Message,), dict(

      UptakelimEntry = _reflection.GeneratedProtocolMessageType('UptakelimEntry', (_message.Message,), dict(
        DESCRIPTOR = _GAPFILLMODELPARAMS_FORMULATION_FBAFORMULATION_UPTAKELIMENTRY,
        __module__ = 'gapfill_model_pb2'
        # @@protoc_insertion_point(class_scope:kbase_core.GapfillModelParams.Formulation.FBAFormulation.UptakelimEntry)
        ))
      ,
      DESCRIPTOR = _GAPFILLMODELPARAMS_FORMULATION_FBAFORMULATION,
      __module__ = 'gapfill_model_pb2'
      # @@protoc_insertion_point(class_scope:kbase_core.GapfillModelParams.Formulation.FBAFormulation)
      ))
    ,
    DESCRIPTOR = _GAPFILLMODELPARAMS_FORMULATION,
    __module__ = 'gapfill_model_pb2'
    # @@protoc_insertion_point(class_scope:kbase_core.GapfillModelParams.Formulation)
    ))
  ,
  DESCRIPTOR = _GAPFILLMODELPARAMS,
  __module__ = 'gapfill_model_pb2'
  # @@protoc_insertion_point(class_scope:kbase_core.GapfillModelParams)
  ))
_sym_db.RegisterMessage(GapfillModelParams)
_sym_db.RegisterMessage(GapfillModelParams.Formulation)
_sym_db.RegisterMessage(GapfillModelParams.Formulation.FBAFormulation)
_sym_db.RegisterMessage(GapfillModelParams.Formulation.FBAFormulation.UptakelimEntry)

ModelMetadata = _reflection.GeneratedProtocolMessageType('ModelMetadata', (_message.Message,), dict(

  MetadataEntry = _reflection.GeneratedProtocolMessageType('MetadataEntry', (_message.Message,), dict(
    DESCRIPTOR = _MODELMETADATA_METADATAENTRY,
    __module__ = 'gapfill_model_pb2'
    # @@protoc_insertion_point(class_scope:kbase_core.ModelMetadata.MetadataEntry)
    ))
  ,
  DESCRIPTOR = _MODELMETADATA,
  __module__ = 'gapfill_model_pb2'
  # @@protoc_insertion_point(class_scope:kbase_core.ModelMetadata)
  ))
_sym_db.RegisterMessage(ModelMetadata)
_sym_db.RegisterMessage(ModelMetadata.MetadataEntry)


_GAPFILLMODELPARAMS_FORMULATION_FBAFORMULATION_UPTAKELIMENTRY.has_options = True
_GAPFILLMODELPARAMS_FORMULATION_FBAFORMULATION_UPTAKELIMENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_MODELMETADATA_METADATAENTRY.has_options = True
_MODELMETADATA_METADATAENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
import abc
from grpc.early_adopter import implementations
from grpc.framework.alpha import utilities
class EarlyAdopterfba_modelServicer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def gapfill_model(self, request, context):
    raise NotImplementedError()
class EarlyAdopterfba_modelServer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def start(self):
    raise NotImplementedError()
  @abc.abstractmethod
  def stop(self):
    raise NotImplementedError()
class EarlyAdopterfba_modelStub(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def gapfill_model(self, request):
    raise NotImplementedError()
  gapfill_model.async = None
def early_adopter_create_fba_model_server(servicer, port, private_key=None, certificate_chain=None):
  import gapfill_model_pb2
  import gapfill_model_pb2
  method_service_descriptions = {
    "gapfill_model": utilities.unary_unary_service_description(
      servicer.gapfill_model,
      gapfill_model_pb2.GapfillModelParams.FromString,
      gapfill_model_pb2.ModelMetadata.SerializeToString,
    ),
  }
  return implementations.server("kbase_core.fba_model", method_service_descriptions, port, private_key=private_key, certificate_chain=certificate_chain)
def early_adopter_create_fba_model_stub(host, port, metadata_transformer=None, secure=False, root_certificates=None, private_key=None, certificate_chain=None, server_host_override=None):
  import gapfill_model_pb2
  import gapfill_model_pb2
  method_invocation_descriptions = {
    "gapfill_model": utilities.unary_unary_invocation_description(
      gapfill_model_pb2.GapfillModelParams.SerializeToString,
      gapfill_model_pb2.ModelMetadata.FromString,
    ),
  }
  return implementations.stub("kbase_core.fba_model", method_invocation_descriptions, host, port, metadata_transformer=metadata_transformer, secure=secure, root_certificates=root_certificates, private_key=private_key, certificate_chain=certificate_chain, server_host_override=server_host_override)
# @@protoc_insertion_point(module_scope)
